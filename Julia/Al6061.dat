# optimal blending of Al scrap

MATERIALS = ["UBC", "MixedAuto", "Radiator", "WireScraps", "MixedTurnings", "LithoSheets", "Si", "Mg"]

ELEMENTS = ["Si", "Mg", "Fe", "Cu", "Mn", "Zn"]

required = 1500  # kg

bounds = JuMP.Containers.DenseAxisArray(
  [0.4       0.8;
  0.8        1.2;
  0.         0.8;
  0.15       0.4;
  0.0        0.15;
  0.0        0.25],
ELEMENTS, ["minReq", "maxReq"])

compos = JuMP.Containers.DenseAxisArray(
#	UBC      MixedAuto Radiator WireScraps MixedTurnings LithoSheets Si Mg:=
     [0.225  10.125  0.       0.1875   6.75        0.6         100. 0.;
      0.975  0.225   0.       0.45     0.225       0.		 0. 100.;
      0.375  0.825   0.525    0.3      0.75        0.6375	 0. 0.;
      0.15   2.625   30.      0.0375   2.625       0.125	 0. 0.;
      0.825  0.375   0.       0.0375   0.375       0.6375	 0. 0.;
      0.0375 0.9     0.       0.0525   1.125       0.075	 0. 0.],
  ELEMENTS, MATERIALS)

scrapdata = JuMP.Containers.DenseAxisArray(
# cost in Euro per kg
[
1.25   1000;
1.4    1000;
1.35   1500;
0.8    1200;
0.6    1000;
1.2    1600;
10.    2000;
10.    2000
], MATERIALS, ["cost", "avail"])



